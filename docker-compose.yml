version: "3.1"

services:

  angular:
    build:
      context: ./frontAngular
      dockerfile: Dockerfile
    volumes: # Volume binding
      - ./frontAngular:/usr/src/app
    ports:
      - 4200:4200
    networks:
      - app-tier

  spring:
    build:
      context: ./annuaire
      dockerfile: Dockerfile
    ports:
      - 8082:8082
      - 8001:8001
    restart: "no"
    depends_on:
      - db
      - kafka
      - init-kafka
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      SPRING_DATASOURCE_URL: jdbc:hsqldb:hsql:/db/test
      SPRING_DATASOURCE_USERNAME: sa
      SPRING_DATASOURCE_PASSWORD:
    networks:
      - app-tier

  db:
    image: mitchtalmadge/hsqldb
    environment:
      - HSQLDB_TRACE=true
      - HSQLDB_SILENT=false
      - HSQLDB_USER=sa
      - HSQLDB_PASSWORD=
      - HSQLDB_DATABASE_HOST=localhost
      - HSQLDB_DATABASE_ALIAS=test
    ports:
      - 9001:9001
    volumes:
      - /opt/database
    networks:
      - app-tier


  zookeeper:
    image: confluentinc/cp-zookeeper:6.1.1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

    # reachable on 9092 from the host and on 29092 from inside docker compose
  kafka:
    image: confluentinc/cp-kafka:6.1.1
    depends_on:
      - zookeeper
    ports:
      - '9092:9092'
    expose:
      - '29092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: '1'
      KAFKA_MIN_INSYNC_REPLICAS: '1'
      KAFKA_ADVERTISED_HOST_NAME: kafka


  init-kafka:
    image: confluentinc/cp-kafka:6.1.1
    depends_on:
      - kafka
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafka:29092 --list
      
      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic annuaire --replication-factor 1 --partitions 1
      
      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka:29092 --list
      "

volumes:
  db-data:

networks:
  app-tier:
    driver: bridge
