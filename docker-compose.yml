version: "3.1"

services:

  angular:
    build:
      context: ./frontAngular
      dockerfile: Dockerfile
    ports:
      - 4200:4200
    networks:
      - app-tier

  spring:
    build:
      context: ./annuaire
      dockerfile: Dockerfile
    hostname: spring
    ports:
      - 8082:8082
      - 8001:8001
    restart: "no"
    depends_on:
      - db
      - kafka
    environment:
      BOOTSTRAP_SERVERS_CONFIG: kakfa:9092
      SPRING_DATASOURCE_URL: jdbc:hsqldb:hsql:/db/test
      SPRING_DATASOURCE_USERNAME: sa
      SPRING_DATASOURCE_PASSWORD:

  db:
    image: mitchtalmadge/hsqldb:2.5.0
    environment:
      - HSQLDB_TRACE=true
      - HSQLDB_SILENT=false
      - HSQLDB_USER=sa
      - HSQLDB_PASSWORD=
      - HSQLDB_DATABASE_HOST=localhost
      - HSQLDB_DATABASE_ALIAS=test
    ports:
      - 9001:9001
    volumes:
      - /opt/database


  zookeeper:
    image: confluentinc/cp-zookeeper:6.1.1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

    # reachable on 9092 from the host and on 29092 from inside docker compose
  kafka:
    image: confluentinc/cp-kafka:6.1.1
    depends_on:
      - zookeeper
    ports:
      - '9092:9092'
    hostname: kafka
    links:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: OUTSIDE
      KAFKA_LISTENERS: OUTSIDE://kafka:9092
      KAFKA_ADVERTISED_LISTENERS: OUTSIDE://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: '1'
      KAFKA_MIN_INSYNC_REPLICAS: '1'

  init-kafka:
    build:
      context: ./dockerfile/kafka
      dockerfile: Dockerfile

volumes:
  db-data:

networks:
  app-tier:
    driver: bridge
